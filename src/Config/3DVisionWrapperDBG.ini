
[Log]
EnableSplashScreen = true		// Enables or Disables the splashscreen. Usefull to know if the wrapper is being loaded or not.
EnableLog = false 			// Enables Logging of wrapper internal information
EnableShaderDump = false		// Enable Shader Dump. Shaders will be written to disk as soon as they are created
EnableScrBfrCallTracer = true	 	// Special Logging case. If enabled the log file will contain the Call Order of the glBindFramebuffer, glBindFramebufferEXT, glBindFramebufferARB, glSwapBuffers functions (whichever is used).


[3D_Vision_Global_Settings]
Enable3DVision = false			// Enable or Disable 3D VISION SUPPORT. If disabled the game will render normally (2D).
EnableWindowModeSupport = false		// Enable if you want to play in window mode. Otherwise leave it to false. Playing in FullScreen (this option set to false) will give better FPS.
EnableWindowResizeSupport = false	// Enable window resize support. If the game crashes try to disable this option. It is KNOWN some game don't like this option enabled !!!!
DepthMultiplicationFactor = 1.0		// Depth Hack. The Current depth Value will be multiplied with this factor. Ex: Current depth (NVpanel) is 50%. Factor is 2. Actual Depth will be 100%.
AutomaticHookPoint = true		// If enabled the wrapper automatically tries to hook the app. If disabled use the "Hook Point" option to specify the point where to hook. If the app crashes, disable this option and use the manual mode.


[Manual_Hook_Point_Options] 		// Works only if "Auto Hook Point" option is set to false. Controls Flipping in Auto Mode.
HookPoint = "NONE" 			// Valid points: glBindFramebuffer, glBindFramebufferEXT, glBindFramebufferARB, glSwapBuffers

// If Automatic Hook Point is Disabled, this will act as the Hook Point. 
// If Automatic Hook Point is Enabled, this will control the buffer flipping.
// Modes In Automatic Mode:
// Use "SCREEN_BUFFER" option to copy what currently exists in the OpenGL Back Buffer (Framebuffer 0) // Required for games like MineCraft
// Use "NONE" option for normal buffer flipping.


[Vertex_Stereo_InjectionPoint]
Enable = false				// Enable StereoScopic 3D Injection. If Disabled the engine will render 2 images from the SAME perspective (2D).
EnableFailureInfo = false		// If enabled will display all the Vertex Shaders in which the Stereoscopy wasn't inserted.
InjectionPoint1 = "gl_Position ="	// Part of a STRING that is FOUND in all the VERTEXES. The "Stereo String" will be inserted after this line.
InjectionPoint2 = "NULL"		// Additional Stereoscopy Injection Point
InjectionPoint3 = "NULL"		// Additional Stereoscopy Injection Point
InjectionPoint4 = "NULL"		// Additional Stereoscopy Injection Point
UniformInjection1 = "#version"          // Part of a STRING that is FOUND in all the VERTEXES. The Uniforms (required by "Stereo String") will be inserted after this line.
UniformInjection2 = "NULL"           	// Additional Uniform Injection Point
UniformInjection3 = "NULL"           	// Additional Uniform Injection Point
UniformInjection4 = "NULL"           	// Additional Uniform Injection Point
StereoString = "\n gl_Position.x += g_eye * g_eye_separation * (gl_Position.w - g_convergence);\n"


[Shader_Compiler_Options]
EnableCompilerOptions = false			// Enable or Disable the Shader Compiler.
						// The shaders in this range will be displayed in 2D (No Stereo will be applied). Good for looking for shaders.
ExceptStartVertexShader = -1			// Start Vertex Shader Index.
ExceptEndVertexShader = -1			// End Vertex Shader Index.
						// Specify the Program_Id from where the Shader Compiler will start the Shader List.
ShaderCompilerStartIndex = -1	   		// Used ONLY in the "Shader Compiler". 
										
[Alternative_3D_Settings]
EnableToggleMode = false
AltConvergenceKey = 0x00
ConvergenceValue = 0.0
// Enable Toggle Mode: if set to true it will toggle between values. If set to false a value will be applied as long as you keep that key pressed.
// Use only HEX NUMBERS: for both Keyboard Keys and Mouse Buttons
// 0x70 = F1; 
// 0x71 = F2; 
// 0x72 = F3; 
// Mouse: 
// Left mouse btn :0x01
// Right mouse btn :0x02
// Middle mouse btn :0x04


[Vertex_Stereo_Exception]
// Specify exception Pairs of Shaders (Vertex + Pixel = Shader Program)
// Order: Program_Id, Vertex_Id, Pixel_Id
// Program_Id is always required
// If Vertex_Id and Pixel_Id are set to zero (0) the Shader SWAP will be done ONLY based on the Program_Id.
// Otherwise the Program_Id, Vertex_Id and Pixel_Id MUST MATCH with the ones created by the ENGINE (Game).

ShaderPair (0,0,0)
VertexShaderSource = "0_Vertex_0.glsl"
FragmentShaderSource = "0_Fragment_0.glsl"

[End]
